# .github/workflows/coverage.yml
name: Coverage Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage-cpu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip

      - name: System deps (mlpack)
        run: |
          sudo apt-get update
          sudo apt-get install -y libmlpack-dev

      - name: Install deps
        run: |
          pip install -U pip
          pip install faiss-cpu
          pip install -e packages/blockingpy-core[dev]
          pip install coverage pytest-cov

      - name: Run tests and collect coverage (CPU only)
        run: |
          pytest --ignore=tests/test_gpu_faiss.py \
                 --cov=blockingpy --cov-branch \
                 --cov-report=xml:coverage.xml --cov-report=term-missing

      - name: Upload coverage to Codecov (CPU)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: cpu
          fail_ci_if_error: true

  coverage-gpu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: blockingpy-gpu
          create-args: python=3.10
          init-shell: bash
          condarc: |
            channels:
              - conda-forge
              - pytorch/label/nightly
              - nvidia
            channel_priority: flexible

      - name: Install FAISS cuVS nightly
        shell: bash -l {0}
        run: |
          micromamba install -n blockingpy-gpu -y \
            -c rapidsai-nightly -c rapidsai \
            -c pytorch/label/nightly -c nvidia -c conda-forge \
            'faiss-gpu-cuvs=1.11.*=*cuda12.4.0_nightly'
          micromamba run -n blockingpy-gpu python - <<'PY'
          import faiss
          print("faiss ok, GPUs:", getattr(faiss, "get_num_gpus", lambda: 0)())
          PY

      - name: Install base stack (conda)
        shell: bash -l {0}
        run: |
          micromamba install -n blockingpy-gpu -y numpy scipy scikit-learn pandas python-igraph

      - name: Install Python deps (pip)
        shell: bash -l {0}
        run: |
          micromamba run -n blockingpy-gpu pip install annoy hnswlib pynndescent nltk voyager model2vec

      - name: Install blockingpy-core
        shell: bash -l {0}
        run: |
          micromamba run -n blockingpy-gpu pip install -e packages/blockingpy-core[dev]

      - name: Install coverage + pytest
        shell: bash -l {0}
        run: |
          micromamba run -n blockingpy-gpu pip install coverage pytest

      - name: Run GPU coverage slice
        shell: bash -l {0}
        run: |
          micromamba run -n blockingpy-gpu coverage run -m pytest -q tests/test_gpu_faiss.py
          micromamba run -n blockingpy-gpu coverage xml -o coverage-gpu.xml

      - name: Upload coverage to Codecov (GPU)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage-gpu.xml
          flags: gpu
          fail_ci_if_error: true
